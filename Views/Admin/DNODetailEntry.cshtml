@{
    ViewBag.Title = "DNODetailEntry";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@using (Html.BeginForm("DNODetailEntry", "Admin", FormMethod.Post, new { id = "FormId" }))
{
    @Html.AntiForgeryToken()
}

<div class="right_col" role="main" ng-app="AdminDNOApp" ng-controller="AdminDNOCtrl" ng-cloak>
    <div class="page-title">
        <div class="title_left">
            <h3>District Nodal Officers (DNO) Details Entry</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <div class="col-md-2 col-sm-2 col-xs-12"></div>
                    <label class="control-label col-md-3 col-sm-3 col-xs-12" style="padding-top: 7px">Select the Department</label>
                    <div class="col-md-5 col-sm-5 col-xs-12">
                        <select class="form-control" ng-model="ddlDepartment" ng-options="i.Name for i in departments" ng-change="loadDistricts()">
                            <option value="" disabled style="text-align: center">-Select the Department-</option>
                        </select>
                    </div>
                    <div class="col-md-2 col-sm-2 col-xs-12"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" ng-show="enteredDetails">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-bars"></i> View & Edit DNO's Records</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div class="form-group">
                        <h2>Department : {{lblDepartmentName}}</h2>
                    </div>
                    <div class="table-responsive text-center">
                        <table class="table table-striped table-bordered jambo_table bulk_action">
                            <thead>
                                <tr class="headings">
                                    <th class="column-title text-center">Sl No.</th>
                                    <th class="column-title text-center">District</th>
                                    <th class="column-title text-center">DNO's Name</th>
                                    <th class="column-title text-center">DNO's Mobile No.</th>
                                    <th class="column-title text-center">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="i in enteredDistricts">
                                    <td style="vertical-align: middle">{{$index+1}}</td>
                                    <td style="vertical-align: middle">{{i.DistrictName}}</td>
                                    <td style="vertical-align: middle">{{i.Name}}</td>
                                    <td style="vertical-align: middle">{{i.MobileNo}}</td>
                                    <td style="vertical-align: middle">
                                        <input type="button" class="btn btn-warning btn-sm" data-toggle="modal" data-target="#recordModal" value="Edit" ng-click="editRecord(lblDepartmentCode, i.DistrictCode)" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="recordModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form class="form-horizontal" name="frmRecord" role="form" autocomplete="off" novalidate>
                    <div class="modal-header">
                        <button type="button" id="btnRecordModal" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Edit Record</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row" style="margin: 0px">
                            <div class="form-group">
                                <label style="text-align: center" class="control-label col-md-3 col-sm-3 col-xs-12">Department</label>
                                <label style="text-align: center" class="control-label col-md-3 col-sm-3 col-xs-12">District</label>
                                <label style="text-align: center" class="control-label col-md-3 col-sm-3 col-xs-12">DNO's Name</label>
                                <label style="text-align: center" class="control-label col-md-3 col-sm-3 col-xs-12">DNO's Mobile No.</label>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="row" style="margin: 0px">
                            <div class="form-group" style="text-align: center">
                                <div style="text-align: center; padding-top: 7px" class="col-md-3 col-sm-3 col-xs-12">
                                    {{lblDepartmentName}}
                                </div>
                                <div style="text-align: center; padding-top: 7px" class="col-md-3 col-sm-3 col-xs-12">
                                    {{lblDistrictName}}
                                </div>
                                <div style="text-align: center" class="col-md-3 col-sm-3 col-xs-12">
                                    <input type="text" class="form-control" name="dnoName" ng-model="txtDNOName" placeholder="Enter DNO's Name" alphabet-only maxlength="50" required />
                                    <span style="color: red" ng-show="frmRecord.dnoName.$touched && frmRecord.dnoName.$invalid && frmRecord.dnoName.$error.required">This is a required field.</span>
                                </div>
                                <div style="text-align: center" class="col-md-3 col-sm-3 col-xs-12">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>+91</b></span>
                                        <input type="text" class="form-control" name="dnoMobileNo" ng-model="txtDNOMobileNo" placeholder="Enter DNO's Mobile No" numbers-only mobile-no maxlength="10" required />
                                        <span style="color: red" ng-show="frmRecord.dnoMobileNo.$touched && frmRecord.dnoMobileNo.$invalid && frmRecord.dnoMobileNo.$error.required">This is a required field.</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" ng-disabled="frmRecord.$invalid || frmRecord.$pristine" ng-click="updateRecord(); frmRecord.$setPristine()">Update</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="frmRecord.$setPristine()">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="row" ng-show="selectDistrict">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-bars"></i> Select Districts</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <form class="form-horizontal" name="formRecord" role="form" autocomplete="off" novalidate>
                        <div class="row">
                            <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                <label class="control-label">
                                    <input style="margin: 5px" type="checkbox" ng-model="cbSelectAll" ng-click="checkAll()" />
                                    Select all Districts
                                </label>
                            </div>
                            <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                <label class="control-label">DNO's Name</label>
                            </div>
                            <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                <label class="control-label">DNO's Mobile No.</label>
                            </div>
                            <div class="form-group text-center col-md-3 col-sm-3 col-xs-12">
                                <label class="control-label">Action</label>
                            </div>
                        </div>
                        <div ng-repeat="i in districts">
                            <div class="row">
                                <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                    <div style="display: block">
                                        <input style="margin: 5px" type="checkbox" name="dCode" value="{{i.DistrictCode}}" id="{{i.DistrictCode}}" ng-model="i.selected" ng-click="getDistrict()" />
                                        <label style="padding: 0 25px 0 0; font-weight: normal" class="control-label">{{i.DistrictName | capitalize}}</label>
                                    </div>
                                    <span style="color: red" ng-show="formRecord.dCode.$touched && formRecord.dCode.$invalid && formRecord.dCode.$error.required">This is a required field.</span>
                                </div>
                                <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                    <input type="text" class="form-control" name="dnoName" ng-model="i.Name" placeholder="Enter DNO's Name" alphabet-only maxlength="50" required />
                                    <span style="color: red" ng-show="formRecord.dnoName.$touched && formRecord.dnoName.$invalid && formRecord.dnoName.$error.required">This is a required field.</span>
                                </div>
                                <div class="form-group col-md-3 col-sm-3 col-xs-12">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>+91</b></span>
                                        <input type="text" class="form-control" name="dnoMobileNo" ng-model="i.MobileNo" placeholder="Enter DNO's Mobile No" numbers-only mobile-no maxlength="10" required />
                                        <span style="color: red" ng-show="formRecord.dnoMobileNo.$touched && formRecord.dnoMobileNo.$invalid && formRecord.dnoMobileNo.$error.required">This is a required field.</span>
                                    </div>
                                </div>
                                <div class="form-group text-center col-md-3 col-sm-3 col-xs-12">
                                    <input type="button" value="Submit" class="btn btn-primary" ng-click="submitRecords(i)" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group text-right col-md-12 col-sm-12 col-xs-12">
                            <input type="button" value="Submit All" class="btn btn-primary" ng-disabled="formRecord.$invalid" ng-click="submitAllRecords()" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var app = angular.module("AdminDNOApp", []);
    app.controller("AdminDNOCtrl", function ($scope, $http) {

        var token = document.getElementsByName('__RequestVerificationToken')[0].value;

        $scope.departments = [];
        $http.get('Department').then(function success(response) {
            $scope.departments = response.data;
        }, function error(response) {
            alert(response.status);
        });

        $scope.editRecord = function (a, b) {
            $http.get('RecordbyDeptDist?departmentCode=' + a + '&districtCode=' + b).then(function success(response) {
                var z = response.data;
                $scope.lblDepartmentCode = z.DepartmentCode;
                $scope.lblDepartmentName = z.DepartmentName;
                $scope.lblDistrictCode = z.DistrictCode;
                $scope.lblDistrictName = z.DistrictName;
                $scope.txtDNOName = z.Name;
                $scope.txtDNOMobileNo = z.MobileNo;
            }, function error(response) {
                alert(response.status);
            });
        };

        $scope.updateRecord = function () {
            var myData = { Name: $scope.txtDNOName, MobileNo: $scope.txtDNOMobileNo };
            var myReq = {
                method: 'POST',
                url: 'UpdateDNORecord?departmentCode=' + $scope.lblDepartmentCode + '&districtCode=' + $scope.lblDistrictCode,
                headers: {
                    '__RequestVerificationToken': token
                },
                data: myData
            };
            $http(myReq).then(function success(response) {
                var k = response.data;
                if (k == true) {
                    alert("Records updated successfully.");
                    $scope.loadDistricts();
                }
                else {
                    alert("Oops!!! Something is wrong.Please try again.");
                    return false;
                }
                document.getElementById('btnRecordModal').click();
            }, function error(response) {
                alert(response.status);
            });
        };

        $scope.submitRecords = function (i) {
            if (i.DistrictCode != 0 && i.DistrictName != null && i.selected) {
                if (i.Name != undefined && i.Name != null) {
                    if (i.MobileNo != undefined && i.MobileNo != null) {
                        var myData = { DepartmentCode: $scope.ddlDepartment.Code, DistrictCode: i.DistrictCode, Name: i.Name, MobileNo: i.MobileNo };
                        var req = {
                            method: 'POST',
                            url: 'SubmitDNORecords',
                            headers: {
                                '__RequestVerificationToken': token
                            },
                            data: { x: myData }
                        };
                        $http(req).then(function success(response) {
                            var k = response.data;
                            if (k == true) {
                                alert("Records submitted successfully.");
                                $scope.loadDistricts();
                            }
                            else {
                                alert("Oops!!! Something is wrong.Please try again.");
                                return false;
                            }
                        }, function error(response) {
                            alert(response.status);
                        });
                    }
                    else {
                        alert("Please enter the DNO's Mobile No.");
                    }
                }
                else {
                    alert("Please enter the DNO's Name.");
                }
            }
            else {
                alert("Please select the District.");
            }
        };

        $scope.submitAllRecords = function () {
            var myData = [];
            var count = 0;
            var z;
            angular.forEach($scope.populateDistricts, function (i) {
                if ($scope.ddlDepartment != null && i.DistrictCode != 0) {
                    if (i.Name != undefined) {
                        if (i.MobileNo != undefined) {
                            if (i.MobileNo.length == 10) {
                                var k = { DepartmentCode: $scope.ddlDepartment.Code, DistrictCode: i.DistrictCode, Name: i.Name, MobileNo: i.MobileNo };
                                count++;
                                myData.push(k);
                            }
                            else {
                                z = "Please enter a valid Mobile No.";
                            }
                        }
                        else {
                            z = "Please enter all DNO's Mobile No.";
                        }
                    }
                    else {
                        z = "Please enter all DNO's Name.";
                    }
                }
                else {
                    z = "Please select Department and District.";
                }
            });
            if (z != undefined) {
                alert(z);
            }
            else {
                if (count == $scope.districts.length) {
                    var req = {
                        method: 'POST',
                        url: 'SubmitAllDNORecords',
                        headers: {
                            '__RequestVerificationToken': token
                        },
                        data: { x: myData }
                    };
                    $http(req).then(function success(response) {
                        if (response.data == true) {
                            alert("Records submitted successfully.");
                            $scope.populateDistricts = [];
                            $scope.cbSelectAll = false;
                            getEnteredDistricts();
                            $scope.selectDistrict = false;
                        }
                        else {
                            alert("Oops!!! Something is wrong.Please try again.");
                            return false;
                        }
                    }, function error(response) {
                        alert(response.status);
                    });
                }
                else {
                    alert("Please select all the fields.");
                }
            }
        };

        $scope.districts = [];
        $scope.loadDistricts = function () {
            if ($scope.ddlDepartment.Code !== null) {
                $http.get('ExcludedDistrictByDept?departmentCode=' + $scope.ddlDepartment.Code).then(function success(response) {
                    $scope.districts = response.data;
                    if ($scope.districts.length > 0) {
                        getEnteredDistricts();
                        $scope.selectDistrict = true;
                    }
                    else {
                        $scope.selectDistrict = false;
                        getEnteredDistricts();
                    }
                }, function error(response) {
                    alert(response.status);
                });
            }
            else {
                return false;
            }
        };

        $scope.enteredDistricts = [];
        var getEnteredDistricts = function () {
            $http.get('EnteredDistrict?departmentCode=' + $scope.ddlDepartment.Code).then(function success(response) {
                $scope.enteredDistricts = response.data;
                if ($scope.enteredDistricts.length > 0) {
                    $scope.lblDepartmentName = $scope.enteredDistricts[0].DepartmentName;
                    $scope.lblDepartmentCode = $scope.enteredDistricts[0].DepartmentCode;
                    $scope.enteredDetails = true;
                }
                else {
                    $scope.enteredDetails = false;
                }
            }, function error(response) {
                alert(response.status);
            });
        };

        $scope.populateDistricts = [];
        $scope.getDistrict = function () {
            $scope.populateDistricts = [];
            angular.forEach($scope.districts, function (i) {
                if (i.selected) {
                    $scope.populateDistricts.push(i);
                }
                else {
                    return false;
                }
            });
        };

        $scope.checkAll = function () {
            if ($scope.cbSelectAll) {
                $scope.populateDistricts = [];
                $scope.cbSelectAll = true;
                angular.forEach($scope.districts, function (i) {
                    i.selected = $scope.cbSelectAll;
                    $scope.populateDistricts.push(i);
                });
            }
            else {
                $scope.cbSelectAll = false;
                angular.forEach($scope.districts, function (i) {
                    i.selected = $scope.cbSelectAll;
                });
                $scope.populateDistricts = [];
            }
        };
    });

    app.directive('alphabetOnly', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                ngModelCtrl.$parsers.push(function (val) {
                    if (angular.isUndefined(val)) {
                        var val = '';
                    }
                    var clean = val.replace(/[^a-zA-Z\s]/g, '');
                    if (val !== clean) {
                        ngModelCtrl.$setViewValue(clean);
                        ngModelCtrl.$render();
                    }
                    return clean;
                });
            }
        };
    });

    app.directive('numbersOnly', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                ngModelCtrl.$parsers.push(function (val) {
                    if (angular.isUndefined(val)) {
                        var val = '';
                    }
                    var clean = val.replace(/[^0-9]/g, '');
                    var negativeCheck = clean.split('-');
                    if (!angular.isUndefined(negativeCheck[1])) {
                        negativeCheck[1] = negativeCheck[1].slice(0, negativeCheck[1].length);
                        clean = negativeCheck[0] + '-' + negativeCheck[1];
                        if (negativeCheck[0].length > 0) {
                            clean = negativeCheck[0];
                        }
                    }
                    if (val !== clean) {
                        ngModelCtrl.$setViewValue(clean);
                        ngModelCtrl.$render();
                    }
                    return clean;
                });
                element.bind('keypress', function (event) {
                    if (event.keyCode === 32) {
                        event.preventDefault();
                    }
                });
            }
        };
    });

    app.directive('mobileNo', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                element.on('input change', function () {
                    if (this.value === '0' || this.value === '1' || this.value === '2' || this.value === '3' || this.value === '4' || this.value === '5' || this.value === '6') {
                        this.value = null;
                    }
                });
            }
        };
    });

    app.filter('capitalize', function () {
        return function (input) {
            return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';
        }
    });
</script>