@{
    ViewBag.Title = "DNODetailsModify";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@using (Html.BeginForm("DNODetailsModify", "DNO", FormMethod.Post, new { id = "FormId" }))
{
    @Html.AntiForgeryToken()
}
<div class="right_col" role="main" ng-app="DNODMApp" ng-controller="DNODMCtrl" ng-cloak>
    <div data-loading></div>
    <div class="page-title">
        <h3>Modification for District Nodal Officers (DNO) Details</h3>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-bars"></i> Select District & Department</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div class="row">
                        <form role="form" name="formRecord" class="form-horizontal form-label-left" autocomplete="off" novalidate>
                            <div class="col-md-2 col-sm-2 col-xs-12"></div>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                <div class="form-group">
                                    <label style="text-align: left" class="control-label col-md-5 col-sm-5 col-xs-12">
                                        District
                                        <span style="color: red" class="required">*</span>
                                    </label>
                                    <div class="col-md-7 col-sm-7 col-xs-12 inputGroupContainer">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                            <select class="form-control" name="DistName" ng-model="ddlDistrict" ng-options="i.DistrictName for i in districts" required>
                                                <option value="">---Select the District---</option>
                                            </select>
                                        </div>
                                        <span style="color: red" ng-show="formRecord.DistName.$touched && formRecord.DistName.$invalid && formRecord.DistName.$error.required">This is a required field.</span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label style="text-align: left" class="control-label col-md-5 col-sm-5 col-xs-12">
                                        Department
                                        <span style="color: red" class="required">*</span>
                                    </label>
                                    <div class="col-md-7 col-sm-7 col-xs-12 inputGroupContainer">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                            <select class="form-control" name="DeptName" ng-model="ddlDepartment" ng-options="i.Name for i in departments" required>
                                                <option value="" disabled>---Select the Department---</option>
                                            </select>
                                        </div>
                                        <span style="color: red" ng-show="formRecord.DeptName.$touched && formRecord.DeptName.$invalid && formRecord.DeptName.$error.required">This is a required field.</span>
                                    </div>
                                </div>
                                <div class="form-group text-center">
                                    <input type="button" value="View DNO Details" class="btn btn-primary" ng-disabled="formRecord.$invalid || formRecord.$pristine" ng-click="getDNODetails(); formRecord.$setPristine()" />
                                </div>
                            </div>
                            <div class="col-md-2 col-sm-2 col-xs-12"></div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" ng-show="dnoEnteredDetails">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2><i class="fa fa-bars"></i> View & Modify District Nodal Officers (DNO) Details</h2>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <div class="row">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <label style="font-size: medium; font-weight: normal" class="control-label">District : </label>
                            <label style="font-size: medium" class="control-label">{{k.DistName | capitalize}}</label>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <label style="font-size: medium; font-weight: normal" class="control-label">Department : </label>
                            <label style="font-size: medium" class="control-label">{{k.DeptName | capitalize}}</label>
                        </div>
                    </div>
                    <div class="row">
                        <form role="form" name="frmRecord" class="form-horizontal form-label-left" autocomplete="off" novalidate>
                            <div class="table-responsive text-center">
                                <table class="table table-striped table-bordered jambo_table bulk_action">
                                    <thead>
                                        <tr class="headings">
                                            <th class="column-title text-center">Name</th>
                                            <th class="column-title text-center">Mobile No.</th>
                                            <th class="column-title text-center">Signature</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-show="dLabel">
                                            <td style="vertical-align: middle">{{k.Name}}</td>
                                            <td style="vertical-align: middle">{{k.MobileNo}}</td>
                                            <td style="vertical-align: middle"><img id="dnoSignature" style="height: 110px; width: 180px; border: 1px solid black" /></td>
                                        </tr>
                                        <tr ng-show="!dTextBox">
                                            <td colspan="3" style="text-align: right; vertical-align: middle">
                                                <input type="button" class="btn btn-warning" value="Edit" ng-click="editRecord()" />
                                            </td>
                                        </tr>
                                        <tr ng-show="dTextBox">
                                            <td style="vertical-align: middle">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                                    <input type="text" class="form-control" name="dnoName" ng-model="Name" placeholder="Enter Name" alphabet-only maxlength="50" required />
                                                </div>
                                                <span style="color: red" ng-show="frmRecord.dnoName.$touched && frmRecord.dnoName.$invalid && frmRecord.dnoName.$error.required">This is a required field.</span>
                                            </td>
                                            <td style="vertical-align: middle">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><b>+91</b></span>
                                                    <input type="text" class="form-control" name="dnoMobileNo" ng-model="MobileNo" placeholder="Enter Mobile No" numbers-only mobile-no maxlength="10" required />
                                                </div>
                                                <span style="color: red" ng-show="frmRecord.dnoMobileNo.$touched && frmRecord.dnoMobileNo.$invalid && frmRecord.dnoMobileNo.$error.required">This is a required field.</span>
                                            </td>
                                            <td style="vertical-align: middle">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-picture"></i></span>
                                                    <input type="text" class="form-control" hidden id="base64textarea" placeholder="Base64 will appear here" disabled style="display: none" required />
                                                    <input type="file" id="dnoSign" name="dnoSign" class="form-control" onchange="angular.element(this).scope().uploadSign(this.files)" required />
                                                </div>
                                                <span style="color: red" ng-show="frmRecord.dnoSign.$touched && frmRecord.dnoSign.$invalid && frmRecord.dnoSign.$error.required">This is a required field.</span>
                                            </td>
                                        </tr>
                                        <tr ng-show="!dLabel">
                                            <td colspan="3" style="text-align: right; vertical-align: middle">
                                                <input type="button" id="btnUpdateSign" class="btn btn-success" value="Update" ng-disabled="frmRecord.$invalid || frmRecord.$pristine" ng-click="updateRecord(); frmRecord.$setPristine()" />
                                                <input type="button" class="btn btn-default" value="Cancel" ng-click="cancel()" />
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var app = angular.module("DNODMApp", []);

    app.controller("DNODMCtrl", function ($scope, $http, $timeout) {

        var token = document.getElementsByName('__RequestVerificationToken')[0].value;

        $http.get('District').then(function success(response) {
            $scope.districts = response.data;
        }, function error(response) {
            alert(response.status);
        });

        $http.get('Department').then(function success(response) {
            $scope.departments = response.data;
        }, function error(response) {
            alert(response.status);
        });

        $scope.getDNODetails = function () {
            $http.get('GetDNODetails?deptCode=' + $scope.ddlDepartment.Code + '&distCode=' + $scope.ddlDistrict.DistrictCode).then(function success(response) {
                $scope.k = response.data;
                if ($scope.k != "" && $scope.k != null && $scope.k != undefined) {
                    $scope.Name = $scope.k.Name;
                    $scope.MobileNo = $scope.k.MobileNo;
                    fetchSign($scope.k.Sign);
                    $scope.dnoEnteredDetails = true;
                }
                else {
                    alert("The details of concerned DNO are not uploaded.");
                    $scope.ddlDistrict = null;
                    $scope.ddlDepartment = null;
                    $scope.dnoEnteredDetails = false;
                }
            }, function error(response) {
                alert(response.status);
            });
        };

        var fetchSign = function (a) {
            var obj = "data:image/jpeg;base64," + a;
            document.getElementById('dnoSignature').setAttribute("src", obj);
        };

        $scope.dLabel = true;
        $scope.editRecord = function () {
            $scope.dTextBox = true;
            $scope.dLabel = false;
        };

        $scope.cancel = function () {
            $scope.dTextBox = false;
            $scope.dLabel = true;
        }

        $scope.updateRecord = function () {
            if (document.getElementById("dnoSign").files.length == 0) {
                alert("Plesase upload a Signature to update.");
                return false;
            }
            if (document.getElementById("dnoSign").files.length > 0) {
                var sign = document.getElementById("base64textarea").value;
            }
            if (sign != null && sign != undefined && sign != "") {
                if ($scope.Name != undefined && $scope.Name != null && $scope.Name != "") {
                    if ($scope.MobileNo != undefined && $scope.MobileNo != null && $scope.MobileNo != "") {
                        if ($scope.k.DeptCode != undefined && $scope.k.DeptCode != null && $scope.k.DeptCode != "" && $scope.k.DistCode != undefined && $scope.k.DistCode != null && $scope.k.DistCode != "") {
                            var myData = { Name: $scope.Name, MobileNo: $scope.MobileNo, Signature: sign };
                            var req = {
                                method: 'POST',
                                url: 'UpdateDNODetails?deptCode=' + $scope.k.DeptCode + '&distCode=' + $scope.k.DistCode,
                                headers: {
                                    '__RequestVerificationToken': token
                                },
                                data: { x: myData }
                            };
                            $http(req).then(function success(response) {
                                var k = response.data;
                                if (k == true) {
                                    alert("Records updated successfully.");
                                    $http.get('GetDNODetails?deptCode=' + $scope.k.DeptCode + '&distCode=' + $scope.k.DistCode).then(function success(response) {
                                        $scope.k = response.data;
                                        $scope.Name = $scope.k.Name;
                                        $scope.MobileNo = $scope.k.MobileNo;
                                        fetchSign($scope.k.Sign);
                                        $scope.dTextBox = false;
                                        $scope.dLabel = true;
                                    }, function error(response) {
                                        alert(response.status);
                                    });
                                }
                                else {
                                    alert("Oops!!! Something is wrong.Please try again.");
                                    $scope.dTextBox = true;
                                    $scope.dLabel = false;
                                    return false;
                                }
                            }, function error(response) {
                                alert(response.status);
                            });
                        }
                        else {
                            alert("Please select the District & Department.");
                        }
                    }
                    else {
                        alert("Please enter the DNO's Mobile No.");
                    }
                }
                else {
                    alert("Please enter the DNO's Name.");
                }
            }
            else {
                alert("Please upload the Signature.");
            }
        };

        $scope.uploadSign = function (files) {
            var ext = files[0].name.match(/\.(.+)$/)[1];
            if (!(angular.lowercase(ext) === 'jpeg' || angular.lowercase(ext) === 'jpg')) {
                alert("Invalid Signature file, you must select a *.jpg , *.jpeg  file.");
                document.getElementById('dnoSign').value = null;
                return false;
            }
            if (files.fileSize == -1) {
                alert("Couldn't load Signature file size. Please try to save again.");
                return false;
            }
            else {
                var as = files[0].size;
                if (files[0].size > 51200) {
                    document.getElementById('dnoSign').value = null;
                    alert("File is too large, you must select file under 50kb.");
                    return false;
                }
                else {
                    document.getElementById('btnUpdateSign').disabled = false;
                    return;
                }
            }
        };

        var handleFileSelect = function (evt) {
            var files = evt.target.files;
            var file = files[0];
            if (files && file) {
                var reader = new FileReader();
                reader.onload = function (readerEvt) {
                    var binaryString = readerEvt.target.result;
                    document.getElementById("base64textarea").value = btoa(binaryString);
                };
                reader.readAsBinaryString(file);
            }
        };
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            document.getElementById('dnoSign').addEventListener('change', handleFileSelect, false);
        } else {
            alert('The File APIs are not fully supported in this browser.');
        };
    });

    app.directive('alphabetOnly', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                ngModelCtrl.$parsers.push(function (val) {
                    if (angular.isUndefined(val)) {
                        var val = '';
                    }
                    var clean = val.replace(/[^a-zA-Z\s]/g, '');
                    if (val !== clean) {
                        ngModelCtrl.$setViewValue(clean);
                        ngModelCtrl.$render();
                    }
                    return clean;
                });
            }
        };
    });

    app.directive('numbersOnly', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                ngModelCtrl.$parsers.push(function (val) {
                    if (angular.isUndefined(val)) {
                        var val = '';
                    }
                    var clean = val.replace(/[^0-9]/g, '');
                    var negativeCheck = clean.split('-');
                    if (!angular.isUndefined(negativeCheck[1])) {
                        negativeCheck[1] = negativeCheck[1].slice(0, negativeCheck[1].length);
                        clean = negativeCheck[0] + '-' + negativeCheck[1];
                        if (negativeCheck[0].length > 0) {
                            clean = negativeCheck[0];
                        }
                    }
                    if (val !== clean) {
                        ngModelCtrl.$setViewValue(clean);
                        ngModelCtrl.$render();
                    }
                    return clean;
                });
                element.bind('keypress', function (event) {
                    if (event.keyCode === 32) {
                        event.preventDefault();
                    }
                });
            }
        };
    });

    app.directive('mobileNo', function () {
        return {
            require: '?ngModel',
            link: function (scope, element, attrs, ngModelCtrl) {
                if (!ngModelCtrl) {
                    return;
                }
                element.on('input change', function () {
                    if (this.value === '0' || this.value === '1' || this.value === '2' || this.value === '3' || this.value === '4' || this.value === '5') {
                        this.value = null;
                    }
                });
            }
        };
    });

    app.directive('loading', ['$http', function ($http) {
        return {
            restrict: 'A',
            template: '<div class="loading">Loading&#8230;</div>',
            link: function (scope, elm, attrs) {
                scope.isLoading = function () {
                    return $http.pendingRequests.length > 0;
                };
                scope.$watch(scope.isLoading, function (v) {
                    if (v) {
                        elm.css('display', 'block');
                    } else {
                        elm.css('display', 'none');
                    }
                });
            }
        };
    }]);

    app.filter('capitalize', function () {
        return function (input) {
            return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';
        }
    });
</script>