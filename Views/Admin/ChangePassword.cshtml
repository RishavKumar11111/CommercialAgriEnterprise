@model CommercialAgriEnterprise.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Content/encoder.js"></script>
@using (Html.BeginForm("ChangePassword", "Admin", FormMethod.Post, new { id = "FormId", @class = "form-horizontal text-center", role = "form", @style = "padding: 50px 0px" }))
{
    @Html.AntiForgeryToken()
    <div class="right_col" role="main">
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-xs-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Change Password</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12"></div>
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        <div class="x_content">
                            <br />
                            <input type="hidden" name="uid" id="uid" value="@ViewBag.uid" />
                            <div class="form-group">
                                @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", id = "op" })
                                    @Html.HiddenFor(m => m.Key, new { @class = "form-control", autocomplete = "off", id = "pkey" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "np" })
                                </div>
                                <span id="password_strength"></span>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "cp" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Change password" class="btn btn-default" id="rck" />
                                </div>
                            </div>
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12" style="text-align:center;">
                                    <h3 style="color:white;">@Html.ValidationMessage("Msg")</h3>
                                    <h3 style="color:white;">@ViewBag.Errmsg</h3>
                                </div>
                            </div>
                            <div class="form-group" hidden="hidden" id="hdnmsg">
                                <div class="col-md-12 col-sm-12 col-xs-12" style="text-align:center;">
                                    <h3 style="color:red;font-size:15px;">* New Password between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character</h3>
                                    <h3 style="color:white;"></h3>
                                </div>
                            </div>
                            <div class="form-group" hidden="hidden" id="pwdlength">
                                <div class="col-md-12 col-sm-12 col-xs-12" style="text-align:center;">
                                    <h3 style="color:red;font-size:15px;">*New Pasword must be of 8 characters.</h3>
                                    <h3 style="color:white;"></h3>
                                </div>
                            </div>
                            <div class="form-group" hidden="hidden" id="chkallFields">
                                <div class="col-md-12 col-sm-12 col-xs-12" style="text-align:center;">
                                    <h3 style="color:red;font-size:15px;">* Please fill all the field before proceed.</h3>
                                    <h3 style="color:white;"></h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12"></div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    var app = angular.module("AdminApp", []);
    app.controller("AdminCtrl", function ($scope, $http) {
        var token = document.getElementsByName('__RequestVerificationToken')[0].value;
    });
</script>

<script type="text/javascript">
    $(function () {
        $("#np").bind("keyup", function () {
            //TextBox left blank.
            if ($(this).val().length == 0) {
                $("#password_strength").html("");
                return;
            }
            //Regular Expressions.
            var regex = new Array();
            regex.push("[A-Z]"); //Uppercase Alphabet.
            regex.push("[a-z]"); //Lowercase Alphabet.
            regex.push("[0-9]"); //Digit.
            regex.push("[$!%*#?&]"); //Special Character.
            var passed = 0;
            //Validate for each Regular Expression.
            for (var i = 0; i < regex.length; i++) {
                if (new RegExp(regex[i]).test($(this).val())) {
                    passed++;
                }
            }
            //Validate for length of Password.
            if (passed > 2 && $(this).val().length > 8) {
                passed++;
            }
            //Display status.
            var color = "";
            var strength = "";
            switch (passed) {
                case 0:
                case 1:
                    strength = "Weak";
                    color = "red";
                    break;
                case 2:
                    strength = "Good";
                    color = "darkorange";
                    break;
                case 3:
                case 4:
                    strength = "Strong";
                    color = "green";
                    break;
                case 5:
                    strength = "Very Strong";
                    color = "darkgreen";
                    break;
            }
            $("#password_strength").html(strength);
            $("#password_strength").css("color", color);
        });
    });

    $(document).ready(function () {
        $("#rck").click(function () {
            $("#hdnmsg").hide();
            $("#pwdlength").hide();
            $("#chkallFields").hide();
            $('#pkey').val("@Session["Key"]");
            var password = $("#op").val();
            var Newpassword = $("#np").val();
            var Cnfpassword = $("#cp").val();
            var passw = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}$/;
            if (password != "" && Newpassword != "" && Cnfpassword != "") {
                if (Newpassword.length > 8) {
                    if (password.match(passw) && Newpassword.match(passw) && Cnfpassword.match(passw)) {
                        $('#np').val(digest($('#np').val())); $('#cp').val(digest($('#cp').val()));
                        $('#op').val(digest("@Session["Key"]" + digest(digest($('#op').val()))))
                    }
                    else {
                        $("#np").val('');
                        $("#cp").val('');
                        // alert('Enter New Password between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character');
                        $("#hdnmsg").show();
                        return false;
                    }
                }
                else {
                    // alert('New Password must be of 8 characters.');
                    $("#pwdlength").show();
                    return false;
                }
            }
            else {
                //alert('Please fill all the field before proceed');
                $("#chkallFields").show();
                return false;
            }
        });
    });
</script>