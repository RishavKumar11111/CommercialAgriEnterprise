@{
    ViewBag.Title = "PRequest";
    Layout = "~/Views/Shared/_LayoutPayment.cshtml";
}
@using (Html.BeginForm("PRequest", "Payment", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal text-center", role = "form" }))
{
    @Html.AntiForgeryToken()
}
<div ng-app="PaymentRequestApp" ng-controller="PaymentRequestCtrl" ng-cloak>
    <div data-loading></div>
    <div class="row">
        <div class="title col-md-8 col-sm-8 col-xs-12 text-right">
            <h2>Mukhyamantri Krushi Udyoga Yojana</h2>
        </div>
        <div class="title col-md-4 col-sm-4 col-xs-12 text-right" style="padding-top: 22px">
            <div id="clockdiv">
                <div>
                    <span class="minutes"></span>
                    <text class="smalltext">Minutes</text>
                </div>
                <div>
                    <span class="seconds"></span>
                    <text class="smalltext">Seconds</text>
                </div>
                <div style="background: #ffffff; color: #000000">
                    <text>Remaining Before Session Time Out.</text>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <h3 style="text-align: center">Online Payment</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="well" style="margin-top: 30px">
        <form class="form-horizontal text-center" name="formTransaction" style="margin-top: 50px" role="form" autocomplete="off" novalidate>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="table table-responsive">
                        <table class="table table-striped table-bordered table-hover" style="white-space: nowrap">
                            <thead>
                                <tr style="background: #34495e; color: #ecf0f1">
                                    <td>Reference No.</td>
                                    <td>Transaction ID</td>
                                    <td>Farmer ID</td>
                                    <td>Farmer's Name</td>
                                    <td>Payment Amount</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>{{k.t.ReferenceNo}}</td>
                                    <td>{{k.t.TransactionID}}</td>
                                    <td>{{k.t.FarmerID}}</td>
                                    <td>{{k.t.FarmerName | capitalize}}</td>
                                    <td>₹ {{k.t.PaymentAmount}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <a href="{{k.payNowURL}}"><input type="button" value="Pay Now" class="btn btn-info" /></a>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    var app = angular.module("PaymentRequestApp", ['ngMaterial']);

    app.controller("PaymentRequestCtrl", function ($scope, $http, $mdDialog) {

        $scope.referenceNo = "@ViewBag.ReferenceNo";

        $http.get('TransactionDetail?referenceNo=' + $scope.referenceNo).then(function success(response) {
            $scope.k = response.data;
        }, function error(response) {
            showAlert(response.status);
        });

        var showAlert = function (ev) {
            $mdDialog.show(
                $mdDialog.alert()
                    .parent(angular.element(document.querySelector('#popupContainer')))
                    .clickOutsideToClose(true)
                    .title('Alert')
                    .textContent(ev)
                    .ariaLabel('Alert Dialog Demo')
                    .ok('OK')
                    .targetEvent(ev)
            );
        };
    });

    app.directive('loading', ['$http', function ($http) {
        return {
            restrict: 'A',
            template: '<div class="loading">Loading&#8230;</div>',
            link: function (scope, elm, attrs) {
                scope.isLoading = function () {
                    return $http.pendingRequests.length > 0;
                };
                scope.$watch(scope.isLoading, function (v) {
                    if (v) {
                        elm.css('display', 'block');
                    } else {
                        elm.css('display', 'none');
                    }
                });
            }
        };
    }]);

    app.filter('capitalize', function () {
        return function (input) {
            if (input != null) {
                input = input.toLowerCase().split(' ');
                for (var i = 0; i < input.length; i++) {
                    input[i] = input[i].charAt(0).toUpperCase() + input[i].substring(1);
                }
                return input.join(' ');
            }
            else {
                return false;
            }
        }
    });
</script>